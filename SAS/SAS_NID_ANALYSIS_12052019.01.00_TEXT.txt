/************************************************************************************************************************

Project: Network Intrusion Detection using Statistical Analysis

Program Name: SAS_NID_ANALYSIS_12052019.01.00

Author: Richard Kessler

Data Created: 12.05.2019

Purpose: Statistical analysis of Network Intrusion data to identify feature selection and model parameters.

Data Scope: Network Intrusion training data which contain network logs and traffic features used to detect anomalies.

**************************************************************************************************************************/


/* LIBNAME AND DATA SETUP */
%LET DSOURCE=%NRSTR(\\Network_Directory\network-intrusion-detection);
%PUT &DSOURCE.;
LIBNAME STAT1 "&DSOURCE";

PROC IMPORT 
DATAFILE = "&DSOURCE.\Train_data.csv"
OUT = TRAINING_SET
REPLACE DBMS = csv ;
RUN;

PROC IMPORT 
DATAFILE = "&DSOURCE.\Test_data.csv"
OUT = TEST_SET
REPLACE DBMS = csv ;
RUN;

DATA TS_CAT;
SET TRAINING_SET;
KEEP PROTOCOL_TYPE SERVICE FLAG CLASS;
RUN;

DATA TS_NUM;
SET TRAINING_SET;
IF CLASS = 'normal' THEN CLASS_INT = 0; ELSE CLASS_INT = 1;
DROP PROTOCOL_TYPE SERVICE FLAG CLASS;
RUN;

%LET INTERVAL = DURATION SRC_BYTES DST_BYTES LAND WRONG_FRAGMENT URGENT	HOT	NUM_FAILED_LOGINS LOGGED_IN	NUM_COMPROMISED	ROOT_SHELL SU_ATTEMPTED	NUM_ROOT NUM_FILE_CREATIONS	NUM_SHELLS NUM_ACCESS_FILES NUM_OUTBOUND_CMDS IS_HOST_LOGIN	IS_GUEST_LOGIN COUNT SRV_COUNT SERROR_RATE SRV_SERROR_RATE RERROR_RATE SRV_RERROR_RATE SAME_SRV_RATE	DIFF_SRV_RATE	SRV_DIFF_HOST_RATE	DST_HOST_COUNT	DST_HOST_SRV_COUNT	DST_HOST_SAME_SRV_RATE	DST_HOST_DIFF_SRV_RATE	DST_HOST_SAME_SRC_PORT_RATE	DST_HOST_SRV_DIFF_HOST_RATE	DST_HOST_SERROR_RATE	DST_HOST_SRV_SERROR_RATE	DST_HOST_RERROR_RATE	DST_HOST_SRV_RERROR_RATE /*CLASS_INT*/;	
%LET INTERVAL_SC1 = DURATION SRC_BYTES DST_BYTES LAND WRONG_FRAGMENT URGENT	HOT	NUM_FAILED_LOGINS LOGGED_IN	NUM_COMPROMISED;
%LET INTERVAL_SC2 = ROOT_SHELL SU_ATTEMPTED	NUM_ROOT NUM_FILE_CREATIONS	NUM_SHELLS NUM_ACCESS_FILES NUM_OUTBOUND_CMDS IS_HOST_LOGIN	IS_GUEST_LOGIN COUNT;
%LET INTERVAL_SC3 = SRV_COUNT SERROR_RATE SRV_SERROR_RATE RERROR_RATE SRV_RERROR_RATE SAME_SRV_RATE	DIFF_SRV_RATE	SRV_DIFF_HOST_RATE	DST_HOST_COUNT	DST_HOST_SRV_COUNT;
%LET INTERVAL_SC4 = DST_HOST_SAME_SRV_RATE	DST_HOST_DIFF_SRV_RATE	DST_HOST_SAME_SRC_PORT_RATE	DST_HOST_SRV_DIFF_HOST_RATE	DST_HOST_SERROR_RATE DST_HOST_SRV_SERROR_RATE DST_HOST_RERROR_RATE DST_HOST_SRV_RERROR_RATE;
%LET CATEGORICAL = PROTOCOL_TYPE SERVICE FLAG CLASS;


/****************************************************/
/************** INTERVAL EDA/ANALYSIS ***************/
/****************************************************/

/* DISTRIBUTION ANALYSIS */
PROC UNIVARIATE DATA=TS_NUM;
VAR &INTERVAL. ;
HISTOGRAM &INTERVAL. / NORMAL KERNEL;
INSET N MEAN STD / POSITION=NE;
TITLE 'INTERVAL VARIABLE DISTRIBUTION ANALYSIS';
RUN; 
* ANALYSIS OUTCOME - MAJORITY OF VARIABLES DO NOT SHOW NORMAL DISTRIBUTIONS WHICH IS EXPECTED DUE TO NETWORK TRAFFIC EXPECTATIONS(HTTP,TCP,ETC.);


/*STANDARDIZING INTERVAL VALUES*/
PROC STANDARD DATA=TS_NUM MEAN=0 STD=1 OUT=TS_STD;
VAR &INTERVAL.;
RUN;
* ANALYSIS OUTCOME - INTERVAL VARIABLES HAVE BEEN SCALED ACCORDINGLY. ;


*INTERVAL CORRELATION ANALYSIS;
%MACRO CORR(VAR1);
ODS GRAPHICS ON / RESET=ALL IMAGEMAP;
PROC CORR DATA=TS_NUM RANK
PLOTS(MAXPOINTS=NONE)=SCATTER(NVAR=ALL ELLIPSE=NONE); 
VAR &VAR1.;
WITH CLASS_INT;
ID CLASS_INT;
TITLE 'CLASS_INT CORRELATIONS ACROSS INTERVAL FEATURES';
RUN;
%MEND CORR;

%CORR(&INTERVAL_SC1.);
/* ANALYSIS OUTCOME - LOGGED IN, WRONG FRAGMENT VARS FOUND SS*/
%CORR(&INTERVAL_SC2.);
/* ANALYSIS OUTCOME - ALL VARS FOUND SS EXCEPT NUM_OUTBOUND_CMDS(DROP), IS_HOST_LOGIN(DROP)*/
%CORR(&INTERVAL_SC3.);
/* ANALYSIS OUTCOME - ALL VARS FOUND SS EXCEPT SRV_COUNT(DROP)*/
%CORR(&INTERVAL_SC4.);
/* ANALYSIS OUTCOME - ALL VARS FOUND SS */


/*ASSESSING ADJUSTED R2 AND COLLINEARITY BETWEEN INTERVAL VARS BEFORE EXCLUDING CORRELATION NON-SIGNIFICANT VARS FROM FEATURE SELECTION SCOPE*/
%MACRO VIF_CHECK(VAR1);
PROC REG DATA=TS_STD;
MODEL CLASS_INT = &VAR1. / VIF TOL;
TITLE "&VAR1. ANALYSIS";
RUN;
%MEND VIF_CHECK;

%VIF_CHECK(SRC_BYTES); 
%VIF_CHECK(DST_BYTES); 
%VIF_CHECK(LAND); 
%VIF_CHECK(WRONG_FRAGMENT); 
%VIF_CHECK(URGENT); 
%VIF_CHECK(HOT); 
%VIF_CHECK(NUM_FAILED_LOGINS); 
%VIF_CHECK(LOGGED_IN); 
%VIF_CHECK(NUM_COMPROMISED); 
%VIF_CHECK(ROOT_SHELL); 
%VIF_CHECK(SU_ATTEMPTED); 
%VIF_CHECK(NUM_ROOT); 
%VIF_CHECK(NUM_FILE_CREATIONS); 
%VIF_CHECK(NUM_SHELLS); 
%VIF_CHECK(NUM_ACCESS_FILES);
%VIF_CHECK(NUM_OUTBOUND_CMDS);
%VIF_CHECK(IS_HOST_LOGIN);
%VIF_CHECK(IS_GUEST_LOGIN);
%VIF_CHECK(COUNT);
%VIF_CHECK(SRV_COUNT);
%VIF_CHECK(SERROR_RATE);
%VIF_CHECK(SRV_SERROR_RATE);
%VIF_CHECK(RERROR_RATE);
%VIF_CHECK(SRV_RERROR_RATE);
%VIF_CHECK(SAME_SRV_RATE);
%VIF_CHECK(DIFF_SRV_RATE);
%VIF_CHECK(SRV_DIFF_HOST_RATE);
%VIF_CHECK(DST_HOST_COUNT);
%VIF_CHECK(DST_HOST_SRV_COUNT);
%VIF_CHECK(DST_HOST_SAME_SRV_RATE);
%VIF_CHECK(DST_HOST_DIFF_SRV_RATE);
%VIF_CHECK(DST_HOST_SAME_SRC_PORT_RATE);
%VIF_CHECK(DST_HOST_SRV_DIFF_HOST_RATE);
%VIF_CHECK(DST_HOST_SERROR_RATE);
%VIF_CHECK(DST_HOST_SRV_SERROR_RATE);
%VIF_CHECK(DST_HOST_RERROR_RATE);
%VIF_CHECK(DST_HOST_SRV_RERROR_RATE);
/* VIF ANALYSIS - ADJUSTED R2 SHOWS THE FEATURES BELOW SHOW MINIMUM TO MODERATE WEIGHT CONTRIBUTION TO THE CLASS_INT VAR, COLLINEARITY EXISTS WITHIN CURRENT SCOPE*/
/* ADJ R2 WEIGHT %
	47.35%	LOGGED_IN 
	33.50%	COUNT
	42.24%	SERROR_RATE
	41.96%	SRV_SERROR_RATE
	6.60%	RERROR_RATE
	6.56%	SRV_RERROR_RATE
	56.13%	SAME_SRV_RATE
	3.74%	DIFF_SRV_RATE
	13.60%	DST_HOST_COUNT
	51.74%	DST_HOST_SRV_COUNT
	47.91%	DST_HOST_SAME_SRV_RATE
	5.67%	DST_HOST_DIFF_SRV_RATE
	42.39%	DST_HOST_SERROR_RATE
	42.74%	DST_HOST_SRV_SERROR_RATE
	6.57%	DST_HOST_RERROR_RATE
	6.60%	DST_HOST_SRV_RERROR_RATE
*/

/* SCALING INTERVAL LIST DOWN TO VARS THAT CONTRIBUTE WEIGHT TO THE MODEL WHICH COINCIDES WITH CORRELATION NON-SIGNIFICANT VARS */
%LET INTERVAL = LOGGED_IN COUNT	SERROR_RATE	SRV_SERROR_RATE	RERROR_RATE	SRV_RERROR_RATE	SAME_SRV_RATE DIFF_SRV_RATE	DST_HOST_COUNT DST_HOST_SRV_COUNT DST_HOST_SAME_SRV_RATE DST_HOST_DIFF_SRV_RATE	DST_HOST_SERROR_RATE DST_HOST_SRV_SERROR_RATE DST_HOST_RERROR_RATE DST_HOST_SRV_RERROR_RATE;
%VIF_CHECK(&INTERVAL.); 

/* ANALYSIS OUTCOME - SEVERAL VARS FROM THE SCALED LIST SHOW COLLINEARITY>10, SCALE FURTHER AND RE-ASSESS */
%LET INTERVAL = LOGGED_IN COUNT SAME_SRV_RATE DIFF_SRV_RATE	DST_HOST_COUNT DST_HOST_SRV_COUNT DST_HOST_DIFF_SRV_RATE DST_HOST_RERROR_RATE;
%VIF_CHECK(&INTERVAL.); 
/* ANALYSIS OUTCOME - COLLINEARITY BETWEEN VARIABLES SIGNIFICANTLY REDUCED TO A LOWER RATE(<10), CURRENT INTERVAL SCOPE CONTRIBUTES 70.5% ADJ R2 WEIGHT TO THE MODEL */
/* INTERVAL FEATURE SELECTION:
	LOGGED_IN 
	COUNT 
	SAME_SRV_RATE	
	DIFF_SRV_RATE	
	DST_HOST_COUNT	
	DST_HOST_SRV_COUNT	
	DST_HOST_DIFF_SRV_RATE	
	DST_HOST_RERROR_RATE
*/


/****************************************************/
/************ CATEGORICAL EDA/ANALYSIS **************/
/****************************************************/


*CATEGORICAL ASSOCIATION ANALYSIS;
PROC FREQ DATA=TS_CAT;
TABLES PROTOCOL_TYPE SERVICE FLAG CLASS
	   PROTOCOL_TYPE*CLASS 
	   FLAG*CLASS 
	   SERVICE*CLASS
	   PROTOCOL_TYPE*FLAG
	   FLAG*SERVICE 
       (PROTOCOL_TYPE SERVICE FLAG)*CLASS /
	   PLOTS=(FREQPLOT)
	   CHISQ CELLCHI2 CMH NOCOL NOPERCENT; 
	   TITLE "CATEGORICAL ASSOCIATION ANALYSIS - FREQUENCY";
 RUN;
* ANALYSIS OUTCOME ;
* STATE ANALYSIS: INDICATES MAJORITY OF ACTIVITY WITHIN FIN(33%) AND INT(65%).;
* PROTOCOL ANALYSIS: INDICATES MAJORITY OF ACTIVITY WITHIN UDP(47%), TCP(34%) AND UNA(8%).;
* FLAG ANALYSIS: 98% OF S0 AND 100% OF SH FLAGS ARE ASSOCIATED TO THE ANOMALY FLAGGED RECORDS. ;
* CATEGORICAL SS FEATURES - PROTOCOL_TYPE, SERVICE, FLAG;


/* PREPPING THE INTERVAL AND CATEGORICAL DATASETS FOR REGRESSION/MODELING */
 DATA TRAIN_DS;
 MERGE TS_STD TS_CAT ;
 DROP CLASS;
 RUN;

PROC SURVEYSELECT DATA=TRAIN_DS
RATE=0.3 OUTALL OUT=TRAIN_DS_30PERC;
RUN;

DATA TRAIN_70PERC VALIDATE_30PERC;
SET TRAIN_DS_30PERC;
IF SELECTED = 0 THEN OUTPUT TRAIN_70PERC; ELSE OUTPUT VALIDATE_30PERC;
DROP SELECTED;
RUN;

PROC LOGISTIC DATA=TS_CAT;
CLASS  PROTOCOL_TYPE SERVICE FLAG;
MODEL CLASS=PROTOCOL_TYPE SERVICE FLAG / SELECTION=FORWARD  ;
EXACT;
RUN;
* ANALYSIS OUTCOME: CONVERGENCE SATISFIED EARLY, CURRENT SCOPE IS DISPLAYING SIGNS OF OVERFITTING;
* VARIOUS OPTIONS AND SELECTION METHODS APPLIED TO OBSERVE OUTCOMES, ADDITIONAL ANALYSIS REQUIRED TO REFINE.; 
* RECOMMENDED ACTIONS: SERVICE CONTAINS EXCESSIVE NUMBER OF LEVELS, INCREASE TRAINING DATA VOLUME, CONSIDER LEVEL REDUCTION, ENCODE CATEGORICAL VARS; 


ODS GRAPHICS ON;
PROC GLMSELECT DATA=TRAIN_70PERC
PLOTS=ALL SEED=987789
VALDATA=VALIDATE_30PERC;
CLASS PROTOCOL_TYPE SERVICE FLAG / PARAM=GLM REF=FIRST;
MODEL CLASS_INT=PROTOCOL_TYPE SERVICE FLAG &INTERVAL / SELECTION=STEPWISE DETAILS=SUMMARY SELECT=SBC SLENTRY=0.05 SLSTAY=0.05 CHOOSE=VALIDATE;
STORE OUT=TRAIN_GLMSELECT;
TITLE 'STEPWISE MODEL SELECTION FOR CLASS_INT - SL 0.05';
RUN;
* ANALYSIS OUTCOME: TRAINED THE MODEL WITH AND W/O VALIDATION DATA, FRONT, BACK AND STEP SELECION AND DIFFERING INFO CRITERIA OPTIONS. ;
* MODEL OUTCOME: BEST MODEL SELECTED AT 11 BUT RELATIVELY SUBTLE REDUCTION IN VALIDATION A.S.E BETWEEN STEPS 5-11.; 


/* PROBABILITY PREDICTION SETUP */
PROC PLM RESTORE=TRAIN_GLMSELECT;
SCORE DATA=VALIDATE_30PERC OUT=NID_SCORED /ILINK;
CODE FILE="&DSOURCE.\NID_PP_SC.SAS";
TITLE 'PROBABLITY PREDICTIONS SETUP';
RUN;


/* SCORING TEST DATA */
DATA TEST_SCORED;
SET TEST_SET;
%INCLUDE "&DSOURCE.\NID_PP_SC.SAS";
RUN;


/*************************************************************************************************************************************

ANALYSIS OUTCOME: Overall, the model performed well with high accuracy initially and even better after feature scope reduction. More 
data is required in order for predictive production consideration, current data leans more to explanatory than predictive. 
Recommended Actions: Increase training data volume and re-validation using different statistical methods (decision tree, neural nets).

/**************************************************************************************************************************************/




